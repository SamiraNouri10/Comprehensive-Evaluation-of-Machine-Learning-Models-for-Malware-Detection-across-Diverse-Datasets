import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC
from sklearn.metrics import classification_report
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import GridSearchCV

# Step 1: Read CSV file
data = pd.read_csv('C:/Samira Files/Dataset/Dataset Ransomwrae/ugransome_Dataset.csv')

X = data.iloc[:, :-1]
y = data.iloc[:, -1]

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Perform feature scaling
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

# Define the parameter grid
param_grid = {'C': [0.1, 1, 10], 'degree': [2, 3, 4]}

# Initialize SVM model with polynomial kernel
svm_grid = GridSearchCV(SVC(kernel='poly'), param_grid, cv=5)
svm_grid.fit(X_train_scaled, y_train)

# Get the best parameters
best_params = svm_grid.best_params_
print("Best Parameters:", best_params)

# Initialize SVM model with best parameters
svm_model = SVC(kernel='poly', C=best_params['C'], degree=best_params['degree'])
svm_model.fit(X_train_scaled, y_train)

# Make predictions on test data
y_pred = svm_model.predict(X_test_scaled)

# Calculate performance metrics
metrics_report = classification_report(y_test, y_pred)
print("Classification Report:")
print(metrics_report)
